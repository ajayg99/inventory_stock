steps:
  ######### Inventory ########
  # Docker Build (inv-app)
  - name: 'gcr.io/cloud-builders/docker'      
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/inv-app', './inventory']

  # Docker Push (inv-app)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/inv-app']

  # Docker Build (inv-consumer)
  - name: 'gcr.io/cloud-builders/docker'      
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/inv-cons', './inventory_consumer']

  # Docker Push (inv-consumer)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/inv-cons']
######### Payments ########
  # Docker Build (pay-app)
  - name: 'gcr.io/cloud-builders/docker'      
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/pay-app', './payments']

  # Docker Push (pay-app)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pay-app']

  # Docker Build (pay-consumer)
  - name: 'gcr.io/cloud-builders/docker'      
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/pay-cons', './payments_consumer']

  # Docker Push (pay-consumer)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/pay-cons']
  ######### Inventory Frontend ########
    # Docker Build (frontend - inv )
  - name: 'gcr.io/cloud-builders/docker'      
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/frontend-inv', './inventory-frontend']

  # Docker Push (frontend - inv)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/frontend-inv']
  ######### Order Frontend ########
    # Docker Build (frontend - inv )
  - name: 'gcr.io/cloud-builders/docker'      
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/frontend-ord', './orders-frontend']

  # Docker Push (frontend - inv)
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/frontend-ord']

  # deploy container image to GKE
  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
    - run
    - --location=us-central1-c
    - --cluster=invstockapp
    - --namespace=invstockprod
    - --filename=gke.yaml


  - name: 'gcr.io/cloud-builders/kubectl'
    env:
    - 'CLOUDSDK_COMPUTE_REGION=us-central1'
    - 'CLOUDSDK_COMPUTE_ZONE=us-central1-c'
    - 'CLOUDSDK_CONTAINER_CLUSTER=invstockapp'
    args:
      - 'apply'
      - '-f'
      - 'https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v0.43.0/deploy/static/provider/cloud/deploy.yaml'
      - '-f'
      - 'gke-ingress.yaml'
      - '-f'
      - 'gke-frontend.yaml'